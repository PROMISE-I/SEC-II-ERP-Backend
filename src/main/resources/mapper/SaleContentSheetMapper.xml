<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nju.edu.erp.dao.SaleReturnsSheetDao">
    <select id="getLatest" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select * from sale_returns_sheet order by id desc limit 0,1;
    </select>

    <insert id="save">
        insert into sale_returns_sheet (id, sale_sheet_id, operator, remark, raw_total_amount, discount, voucher_amount, final_amount, state, create_time)
        values (#{id}, #{saleSheetId}, #{operator}, #{remark}, #{rawTotalAmount}, #{discount}, #{voucherAmount}, #{finalAmount}, #{state}, #{createTime})
    </insert>

    <insert id="saveBatch">
        insert into sale_returns_sheet_content (id ,sale_returns_sheet_id, pid, quantity, unit_price, total_price, remark) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.saleReturnsSheetId}, #{item.pid}, #{item.quantity}, #{item.unitPrice}, #{item.totalPrice}, #{item.remark})
        </foreach>
    </insert>

    <select id="findAll" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select * from sale_returns_sheet;
    </select>

    <select id="findAllByState" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select * from sale_returns_sheet where state = #{state}
    </select>

    <update id="updateState">
        update sale_returns_sheet
        set state = #{state}
        where id = #{saleReturnsSheetId}
    </update>

    <update id="updateStateV2">
        update sale_returns_sheet
        set state = #{state}
        where id = #{saleReturnsSheetId} and state = #{prevState}
    </update>

    <select id="findOneById" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select * from sale_returns_sheet where id = #{saleReturnsSheetId}
    </select>

    <select id="findContentBySaleReturnsSheetId" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetContentPO">
        select * from sale_returns_sheet_content where sale_returns_sheet_id = #{saleReturnsSheetId}
    </select>

    <select id="findAllWarehouseOutputSheetContentBySaleReturnsSheetIdAndPid" resultType="com.nju.edu.erp.model.po.WarehouseOutputSheetContentPO">
        select wosc.*
        from sale_returns_sheet srs, warehouse_output_sheet wos, warehouse_output_sheet_content wosc
        where srs.id = #{saleReturnsSheetId} and
              srs.sale_sheet_id = wos.sale_sheet_id and
              wos.id = wosc.wo_id and
              wosc.pid = #{pid}
        order by wosc.sale_price
    </select>

    <select id="getSaleReturnsDetailByCondition" resultType="com.nju.edu.erp.model.po.SaleIODetailPO">
        select srs.create_time as create_time, p.name as product_name,
               p.type as product_type, srsc.quantity as quantity,
               srsc.unit_price as unit_price, srsc.total_price as total_amount
        from sale_sheet ss, sale_returns_sheet srs, sale_returns_sheet_content srsc, product p
        where ss.id = srs.sale_sheet_id and
              srsc.sale_returns_sheet_id = srs.id and
              srsc.pid = p.id and
              srs.create_time &gt;= #{beginDate} and
              srs.create_time &lt;= #{endDate} and
              p.name = #{productName} and
              ss.supplier = #{customer} and
              ss.salesman = #{salesman}
    </select>

    <select id="getSaleReturnsDetailByRange" resultType="com.nju.edu.erp.model.po.SaleIODetailPO">
        select srs.create_time as create_time, p.name as product_name,
               p.type as product_type, srsc.quantity as quantity,
               srsc.unit_price as unit_price, srsc.total_price as total_amount
        from sale_sheet ss, sale_returns_sheet srs, sale_returns_sheet_content srsc, product p
        where ss.id = srs.sale_sheet_id and
            srsc.sale_returns_sheet_id = srs.id and
            srsc.pid = p.id and
            srs.create_time &gt;= #{beginDate} and
            srs.create_time &lt;= #{endDate}
    </select>


</mapper>